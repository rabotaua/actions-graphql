name: graphql
description: GitHub Action GraphQL Checks
inputs:
  service:
    description: name of the service in graphql
    required: true

  endpoint:
    description: endpoint where graphql schema can be retrieved
    required: true

  key:
    description: apollo key
    required: true

  token:
    description: github token with read privileges
    required: true

runs:
  using: composite
  steps:
    - uses: actions/checkout@v4
      with:
        repository: rabotaua/mavis
        ref: main
        token: ${{ inputs.token }}
        path: .github/mavis

    - name: npm install
      shell: bash
      working-directory: .github/mavis
      run: npm install > /dev/null

    - name: mavis
      shell: bash
      working-directory: .github/mavis
      run: node cli.js ${{ inputs.endpoint }} ${{ inputs.service }}
      #env:
      #  APOLLO_KEY: ${{ inputs.key }}

    # - name: apollo
    #   shell: bash
    #   working-directory: .github/mavis
    #   run: npx apollo service:check --serviceName=${{ inputs.service }} --graph=dracula --key=${{ inputs.key }} --endpoint=${{ inputs.endpoint }}
    - name: rover install
      shell: bash
      env:
         APOLLO_KEY: ${{ inputs.key }}
      run: |
        echo "::group::rover install"
        # # somehow, instead of correct version, our version is used, which causes 404 errors
        # curl -sSL https://rover.apollo.dev/nix/latest | sh
        # # instead downloading it manually
        mkdir -p ~/.rover/bin
        wget https://github.com/apollographql/rover/releases/download/v0.22.0/rover-v0.22.0-x86_64-unknown-linux-gnu.tar.gz
        tar -xvf rover-v0.22.0-x86_64-unknown-linux-gnu.tar.gz -C ~/.rover
        mv ~/.rover/dist/rover ~/.rover/bin/
        rm -rf ~/.rover/dist
        echo "::endgroup::"
        echo "$HOME/.rover/bin" >> $GITHUB_PATH

    - name: rover check
      shell: bash
      env:
        APOLLO_KEY: ${{ inputs.key }}
      run: |
        rover subgraph introspect ${{ inputs.endpoint }} | rover subgraph check 'dracula@current' --name ${{ inputs.service }} --schema -
        $joined_enums | Sort-Object Name | Select-Object -ExpandProperty Group | ForEach-Object { Write-Host "Enum:'$($_.enum)' from service:'$($_.name)' subgraph url:'$($_.url)'" }
        exit 1;
